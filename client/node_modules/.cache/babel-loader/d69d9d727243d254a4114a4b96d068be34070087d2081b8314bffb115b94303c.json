{"ast":null,"code":"var _jsxFileName = \"D:\\\\ContactManagerApp\\\\client\\\\src\\\\AppFixed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './components/Contact.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Login from './Login';\nimport { getContacts, createContact, updateContact, deleteContact, searchContacts, setAuthToken } from './api';\nimport { AiOutlineSun } from 'react-icons/ai';\nimport { MdDarkMode } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // User authentication state with localStorage persistence\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  // Dark mode state with localStorage persistence\n  const [darkMode, setDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved === 'true' ? true : false;\n  });\n\n  // Set auth token and fetch contacts when user is authenticated\n  useEffect(() => {\n    if (user && user.token) {\n      console.log('User state in App:', user);\n      console.log('Setting auth token:', user.token);\n      setAuthToken(user.token);\n      fetchContacts();\n    }\n  }, [user]);\n\n  // Apply dark mode to document\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  // Fetch contacts from API\n  const fetchContacts = async () => {\n    try {\n      const {\n        data\n      } = await getContacts();\n      setContacts(data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n      toast.error('Failed to load contacts');\n    }\n  };\n\n  // Handle form submission for adding or updating contacts\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingId) {\n        // Update existing contact\n        await updateContact(editingId, form);\n        toast.success('Contact Updated!');\n      } else {\n        // Add new contact\n        await createContact(form);\n        toast.success('Contact Added!');\n      }\n\n      // Reset form and fetch updated contacts\n      setForm({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      setEditingId(null);\n      fetchContacts();\n    } catch (error) {\n      console.error('Error saving contact:', error);\n      toast.error('Failed to save contact');\n    }\n  };\n\n  // Load contact data into form for editing\n  const handleEdit = contact => {\n    setForm({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n    setEditingId(contact._id);\n  };\n\n  // Delete a contact\n  const handleDelete = async id => {\n    try {\n      await deleteContact(id);\n      toast.error('Contact Deleted!');\n      fetchContacts();\n    } catch (error) {\n      console.error('Error deleting contact:', error);\n      toast.error('Failed to delete contact');\n    }\n  };\n\n  // Search contacts\n  const handleSearch = async e => {\n    setSearchQuery(e.target.value);\n    try {\n      if (e.target.value) {\n        const {\n          data\n        } = await searchContacts(e.target.value);\n        setContacts(data);\n      } else {\n        fetchContacts();\n      }\n    } catch (error) {\n      console.error('Error searching contacts:', error);\n    }\n  };\n\n  // User authentication handlers\n  const handleLogin = user => {\n    console.log('Login user token:', user.token);\n    setUser(user);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthToken(user.token);\n    toast.success('Logged in successfully!');\n  };\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    setContacts([]);\n    setAuthToken(null);\n    toast.info('Logged out successfully!');\n  };\n\n  // Toggle between light and dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"contacts-title\",\n              children: \"Contact Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleDarkMode,\n                className: \"mr-4 logout-button\",\n                \"aria-label\": \"Toggle theme\",\n                children: darkMode ? /*#__PURE__*/_jsxDEV(AiOutlineSun, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(MdDarkMode, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleLogout,\n                className: \"logout-button\",\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-form-container\",\n            children: /*#__PURE__*/_jsxDEV(ContactForm, {\n              handleSubmit: handleSubmit,\n              form: form,\n              setForm: setForm,\n              editingId: editingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: handleSearch,\n            placeholder: \"Search Contacts...\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: /*#__PURE__*/_jsxDEV(ContactList, {\n              contacts: contacts,\n              handleEdit: handleEdit,\n              handleDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"64VZfMIcu4yePL8MN82QmSdmwvc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","ToastContainer","toast","ContactForm","ContactList","Login","getContacts","createContact","updateContact","deleteContact","searchContacts","setAuthToken","AiOutlineSun","MdDarkMode","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","form","setForm","name","email","phone","editingId","setEditingId","searchQuery","setSearchQuery","user","setUser","savedUser","localStorage","getItem","JSON","parse","darkMode","setDarkMode","saved","token","console","log","fetchContacts","document","documentElement","classList","add","remove","setItem","data","error","handleSubmit","e","preventDefault","success","handleEdit","contact","_id","handleDelete","id","handleSearch","target","value","handleLogin","stringify","handleLogout","removeItem","info","toggleDarkMode","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","className","onClick","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/ContactManagerApp/client/src/AppFixed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './components/Contact.css';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Login from './Login';\r\nimport { getContacts, createContact, updateContact, deleteContact, searchContacts, setAuthToken } from './api';\r\nimport { AiOutlineSun } from 'react-icons/ai';\r\nimport { MdDarkMode } from 'react-icons/md';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [form, setForm] = useState({ name: '', email: '', phone: '' });\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  \r\n  // User authentication state with localStorage persistence\r\n  const [user, setUser] = useState(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  });\r\n  \r\n  // Dark mode state with localStorage persistence\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    const saved = localStorage.getItem('darkMode');\r\n    return saved === 'true' ? true : false;\r\n  });\r\n\r\n  // Set auth token and fetch contacts when user is authenticated\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      console.log('User state in App:', user);\r\n      console.log('Setting auth token:', user.token);\r\n      setAuthToken(user.token);\r\n      fetchContacts();\r\n    }\r\n  }, [user]);\r\n\r\n  // Apply dark mode to document\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    localStorage.setItem('darkMode', darkMode);\r\n  }, [darkMode]);\r\n\r\n  // Fetch contacts from API\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const { data } = await getContacts();\r\n      setContacts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching contacts:', error);\r\n      toast.error('Failed to load contacts');\r\n    }\r\n  };\r\n\r\n  // Handle form submission for adding or updating contacts\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        // Update existing contact\r\n        await updateContact(editingId, form);\r\n        toast.success('Contact Updated!');\r\n      } else {\r\n        // Add new contact\r\n        await createContact(form);\r\n        toast.success('Contact Added!');\r\n      }\r\n      \r\n      // Reset form and fetch updated contacts\r\n      setForm({ name: '', email: '', phone: '' });\r\n      setEditingId(null);\r\n      fetchContacts();\r\n    } catch (error) {\r\n      console.error('Error saving contact:', error);\r\n      toast.error('Failed to save contact');\r\n    }\r\n  };\r\n\r\n  // Load contact data into form for editing\r\n  const handleEdit = (contact) => {\r\n    setForm({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n    setEditingId(contact._id);\r\n  };\r\n\r\n  // Delete a contact\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteContact(id);\r\n      toast.error('Contact Deleted!');\r\n      fetchContacts();\r\n    } catch (error) {\r\n      console.error('Error deleting contact:', error);\r\n      toast.error('Failed to delete contact');\r\n    }\r\n  };\r\n\r\n  // Search contacts\r\n  const handleSearch = async (e) => {\r\n    setSearchQuery(e.target.value);\r\n    \r\n    try {\r\n      if (e.target.value) {\r\n        const { data } = await searchContacts(e.target.value);\r\n        setContacts(data);\r\n      } else {\r\n        fetchContacts();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching contacts:', error);\r\n    }\r\n  };\r\n\r\n  // User authentication handlers\r\n  const handleLogin = (user) => {\r\n    console.log('Login user token:', user.token);\r\n    setUser(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setAuthToken(user.token);\r\n    toast.success('Logged in successfully!');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n    setContacts([]);\r\n    setAuthToken(null);\r\n    toast.info('Logged out successfully!');\r\n  };\r\n\r\n  // Toggle between light and dark mode\r\n  const toggleDarkMode = () => {\r\n    setDarkMode((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ToastContainer />\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={user ? <Navigate to=\"/\" /> : <Login onLogin={handleLogin} />}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            user ? (\r\n              <div className=\"contacts-container\">\r\n                <div className=\"contacts-header\">\r\n                  <h1 className=\"contacts-title\">Contact Manager</h1>\r\n                  <div>\r\n                    <button onClick={toggleDarkMode} className=\"mr-4 logout-button\" aria-label=\"Toggle theme\">\r\n                      {darkMode ? <AiOutlineSun /> : <MdDarkMode />}\r\n                    </button>\r\n                    <button onClick={handleLogout} className=\"logout-button\">\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"contact-form-container\">\r\n                  <ContactForm\r\n                    handleSubmit={handleSubmit}\r\n                    form={form}\r\n                    setForm={setForm}\r\n                    editingId={editingId}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearch}\r\n                  placeholder=\"Search Contacts...\"\r\n                  className=\"search-input\"\r\n                />\r\n                <div className=\"contacts-list\">\r\n                  <ContactList\r\n                    contacts={contacts}\r\n                    handleEdit={handleEdit}\r\n                    handleDelete={handleDelete}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}